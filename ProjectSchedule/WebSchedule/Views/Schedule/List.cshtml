<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Timetable</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

</head>
<body>
    <h1>Class Timetable</h1>
    <div class="container-fluid timetable">
        <div>
            <label for="week">Week:</label>
            <select id="week" name="week">
            </select>

            <label for="year">Year:</label>
            <select id="year" name="year">
            </select>
        </div>

        <table class="table table-bordered">
            <thead id="timetable-head">
            </thead>
            <tbody id="timetable-body">
            </tbody>
        </table>
    </div>
    <button class="btn btn-secondary mt-3" onclick="window.location.href = '/Home';">Back to Home</button>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        function getUrlParameter(name) {
            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        }
        $(document).ready(function () {
            loadSchedule();
            populateWeeks();
            populateYears();
            
            $('#week, #year').change(function () {
                var classId = getUrlParameter('id');
                getScheduleByClass(classId);
            });
        });

        function loadSchedule() {
            var classId = getUrlParameter('id');
            $.get("https://localhost:7535/api/Schedule/GetScheduleByClass/" + classId, function (data) {
                renderSchedule(data);
            });
        }
        function getWeekNumber(date) {
            date = new Date(date);
            date.setHours(0, 0, 0, 0);
            date.setDate(date.getDate() + 4 - (date.getDay() || 7));
            var yearStart = new Date(date.getFullYear(), 0, 1);

            var weekNumber = Math.ceil((((date - yearStart) / 86400000) + 1) / 7);

            return weekNumber;
        }


        function getScheduleByClass(classId) {
            var year = $('#year').val();
            var startDate = encodeURIComponent($('#week option:selected').text().split(' ')[0]);
            var endDate = encodeURIComponent($('#week option:selected').text().split(' ')[2]);
            var apiUrl = `https://localhost:7535/api/Schedule/SearchScheduleByClass/${classId}/${startDate}/${endDate}/${year}`;

            $.get(apiUrl, function (data) {
                renderSchedule(data);
            });
        }

        function renderSchedule(data) {
            var timetableBody = $('#timetable-body');
            var daysOfWeek = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
            var slots = {};

            // Initialising slots
            for (var i = 0; i < 5; i++) {
                slots[i + 1] = {};
            }

            // Sorting data from API into slots
            data.forEach(function (schedule) {
                var slotId = schedule.slotId;
                var dayOfWeek = schedule.dayOfWeek;
                slots[slotId][dayOfWeek] = schedule;
            });

            // Building timetable table
            var html = '<tr><th>Slot</th>';
            for (var i = 0; i < daysOfWeek.length; i++) {
                html += '<th class="weekend">' + daysOfWeek[i] + '</th>';
            }
            html += '</tr>';

            // Adding second row with dates
            html += '<tr><td>Date</td>';
            for (var k = 0; k < daysOfWeek.length; k++) {
                var dateCell = '';
                var dayOfWeek = daysOfWeek[k];
                data.forEach(function (schedule) {
                    if (schedule.dayOfWeek === dayOfWeek) {
                        var date = new Date(schedule.date);
                        var dateOfMonth = date.getDate();
                        var month = date.getMonth() + 1;
                        dateCell = '<td class="weekend">' + dateOfMonth + '/' + month + '</td>';
                    }
                });
                html += dateCell || '<td class="weekend"></td>';
            }
            html += '</tr>';

            // Adding timetable rows
            for (var i = 1; i <= 5; i++) {
                html += '<tr><td>Slot ' + i + '</td>';
                for (var j = 0; j < daysOfWeek.length; j++) {
                    var dayOfWeek = daysOfWeek[j];
                    var schedule = slots[i][dayOfWeek];
                    if (schedule) {
                        html += '<td class="content">' + schedule.subjectCode + ' - ' + schedule.className + '<br>' + schedule.startTime + ' - ' + schedule.endTime + '<br>' + schedule.teacherName + '</td>';
                    } else {
                        html += '<td class="content"></td>';
                    }
                }
                html += '</tr>';
            }
            timetableBody.html(html);
        }

        function formatTwoDigits(number) {
            return (number < 10 ? '0' : '') + number;
        }

        function populateWeeks() {
            var select = document.getElementById('week');
            var currentDate = new Date();
            var currentWeekNumber = getWeekNumber(currentDate);

            for (var i = 1; i <= 52; i++) {
                var startOfWeek = new Date(currentDate.getFullYear(), 0, (i - 1) * 7 + 1);
                var endOfWeek = new Date(currentDate.getFullYear(), 0, (i - 1) * 7 + 7);

                var option = document.createElement('option');
                option.value = i;
                var startDay = formatTwoDigits(startOfWeek.getDate());
                var startMonth = formatTwoDigits(startOfWeek.getMonth() + 1);
                var endDay = formatTwoDigits(endOfWeek.getDate());
                var endMonth = formatTwoDigits(endOfWeek.getMonth() + 1);

                option.text = startDay + '/' + startMonth + ' To ' + endDay + '/' + endMonth;
                select.appendChild(option);

                if (i === currentWeekNumber) {
                    option.selected = true;
                }
            }
        }

        function populateYears() {
            var select = document.getElementById('year');
            var currentYear = new Date().getFullYear();

            for (var i = currentYear; i >= currentYear - 4; i--) {
                var option = document.createElement('option');
                option.value = i;
                option.text = i;
                select.appendChild(option);
                if (i === currentYear) {
                    option.selected = true;
                }
            }
        }
    </script>
</body>
</html>
